pipeline {
    agent any
    stages {
        stage('checkout') {
            steps {
                git branch: "main", url: "https://github.com/Saurabh-WT/java_project_sample_war.git"
            }
        }
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
        stage('Build') {
            steps {
                sh "mvn clean package"
            }
        }
        stage('Convert Encoding') {
            steps {
                sh 'iconv -f UTF-8 -t UTF-8 -o owasp-dependency-check.sh owasp-dependency-check.sh'
            }
        }
        stage('Sonarqube-analysis') {
            steps {
                withSonarQubeEnv('Sonarqube-10.0') {
                    sh """
                    mvn clean verify sonar:sonar \
                      -Dsonar.projectKey=java \
                      -Dsonar.projectName='java' \
                      -Dsonar.host.url=http://localhost:9000 \
                      -Dsonar.login=sqp_442e1832510456674c4736d97d894cab30a31076
                    """
                }
            }
        }
        stage('Nexus-artifactory') {
            steps {
                withMaven(globalMavenSettingsConfig: 'nexus', jdk: '', maven: '', mavenSettingsConfig: '', traceability: true) {
                    sh "mvn deploy -DskipTests=true"
                }
            }
        }
        stage('Deployontomcat') {
            steps {
                sh "cp target/app.war /var/lib/jenkins/apache-tomcat-9.0.85/webapps"
            }
        }
        stage('DAST-ZAP') { 
            steps {
                sshagent(['zap-ssh']) {
                    sh 'ssh -o StrictHostKeyChecking=no walkingtree@127.0.0.1 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8085/app"'
                }
            }
        }
    }
}
